//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestClients.MeasurementsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementModel", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class MeasurementModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestClients.MeasurementsService.DataModel[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestClients.MeasurementsService.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimestampISO8601Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestClients.MeasurementsService.DataModel[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestClients.MeasurementsService.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimestampISO8601 {
            get {
                return this.TimestampISO8601Field;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampISO8601Field, value) != true)) {
                    this.TimestampISO8601Field = value;
                    this.RaisePropertyChanged("TimestampISO8601");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WellKnownTextWGS84Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WellKnownTextWGS84 {
            get {
                return this.WellKnownTextWGS84Field;
            }
            set {
                if ((object.ReferenceEquals(this.WellKnownTextWGS84Field, value) != true)) {
                    this.WellKnownTextWGS84Field = value;
                    this.RaisePropertyChanged("WellKnownTextWGS84");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataModel", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class DataModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BinaryValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LongValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BinaryValue {
            get {
                return this.BinaryValueField;
            }
            set {
                if ((object.ReferenceEquals(this.BinaryValueField, value) != true)) {
                    this.BinaryValueField = value;
                    this.RaisePropertyChanged("BinaryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LongValue {
            get {
                return this.LongValueField;
            }
            set {
                if ((this.LongValueField.Equals(value) != true)) {
                    this.LongValueField = value;
                    this.RaisePropertyChanged("LongValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextValue {
            get {
                return this.TextValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TextValueField, value) != true)) {
                    this.TextValueField = value;
                    this.RaisePropertyChanged("TextValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlValue {
            get {
                return this.XmlValueField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlValueField, value) != true)) {
                    this.XmlValueField = value;
                    this.RaisePropertyChanged("XmlValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveResult", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class SaveResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestClients.MeasurementsService.Failure[] FailuresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestClients.MeasurementsService.MeasurementStatus[] StatusesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestClients.MeasurementsService.Failure[] Failures {
            get {
                return this.FailuresField;
            }
            set {
                if ((object.ReferenceEquals(this.FailuresField, value) != true)) {
                    this.FailuresField = value;
                    this.RaisePropertyChanged("Failures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestClients.MeasurementsService.MeasurementStatus[] Statuses {
            get {
                return this.StatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusesField, value) != true)) {
                    this.StatusesField = value;
                    this.RaisePropertyChanged("Statuses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Failure", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class Failure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementStatus", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class MeasurementStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSavedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset MeasurementTimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSaved {
            get {
                return this.IsSavedField;
            }
            set {
                if ((this.IsSavedField.Equals(value) != true)) {
                    this.IsSavedField = value;
                    this.RaisePropertyChanged("IsSaved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset MeasurementTimeStamp {
            get {
                return this.MeasurementTimeStampField;
            }
            set {
                if ((this.MeasurementTimeStampField.Equals(value) != true)) {
                    this.MeasurementTimeStampField = value;
                    this.RaisePropertyChanged("MeasurementTimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementPackage", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class MeasurementPackage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestClients.MeasurementsService.MeasurementModel[] MeasurementsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestClients.MeasurementsService.MeasurementModel[] Measurements {
            get {
                return this.MeasurementsField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementsField, value) != true)) {
                    this.MeasurementsField = value;
                    this.RaisePropertyChanged("Measurements");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementQueryModel", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class MeasurementQueryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InclusiveFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InclusiveToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InclusiveFrom {
            get {
                return this.InclusiveFromField;
            }
            set {
                if ((this.InclusiveFromField.Equals(value) != true)) {
                    this.InclusiveFromField = value;
                    this.RaisePropertyChanged("InclusiveFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InclusiveTo {
            get {
                return this.InclusiveToField;
            }
            set {
                if ((this.InclusiveToField.Equals(value) != true)) {
                    this.InclusiveToField = value;
                    this.RaisePropertyChanged("InclusiveTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Obj {
            get {
                return this.ObjField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjField, value) != true)) {
                    this.ObjField = value;
                    this.RaisePropertyChanged("Obj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sensors {
            get {
                return this.SensorsField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorsField, value) != true)) {
                    this.SensorsField = value;
                    this.RaisePropertyChanged("Sensors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Take {
            get {
                return this.TakeField;
            }
            set {
                if ((this.TakeField.Equals(value) != true)) {
                    this.TakeField = value;
                    this.RaisePropertyChanged("Take");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SensorModel", Namespace="http://schemas.datacontract.org/2004/07/Savonia.Measurements.Models")]
    [System.SerializableAttribute()]
    public partial class SensorModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ValueDecimalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ValueDecimalCount {
            get {
                return this.ValueDecimalCountField;
            }
            set {
                if ((this.ValueDecimalCountField.Equals(value) != true)) {
                    this.ValueDecimalCountField = value;
                    this.RaisePropertyChanged("ValueDecimalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Savonia.MeasurementService.V3", ConfigurationName="MeasurementsService.IMeasurementsService")]
    public interface IMeasurementsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurements", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurementsResponse")]
        TestClients.MeasurementsService.SaveResult SaveMeasurements(string key, TestClients.MeasurementsService.MeasurementModel[] measurements);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurements", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurementsResponse")]
        System.Threading.Tasks.Task<TestClients.MeasurementsService.SaveResult> SaveMeasurementsAsync(string key, TestClients.MeasurementsService.MeasurementModel[] measurements);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurementPackage", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurementPackageResponse" +
            "")]
        TestClients.MeasurementsService.SaveResult SaveMeasurementPackage(TestClients.MeasurementsService.MeasurementPackage measurementPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurementPackage", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/SaveMeasurementPackageResponse" +
            "")]
        System.Threading.Tasks.Task<TestClients.MeasurementsService.SaveResult> SaveMeasurementPackageAsync(TestClients.MeasurementsService.MeasurementPackage measurementPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/RestGetMeasurements", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/RestGetMeasurementsResponse")]
        TestClients.MeasurementsService.MeasurementModel[] RestGetMeasurements(string key, string sensors, string obj, string tag, string take, string from, string to, string inclusiveFrom, string inclusiveTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/RestGetMeasurements", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/RestGetMeasurementsResponse")]
        System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementModel[]> RestGetMeasurementsAsync(string key, string sensors, string obj, string tag, string take, string from, string to, string inclusiveFrom, string inclusiveTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetMeasurements", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetMeasurementsResponse")]
        TestClients.MeasurementsService.MeasurementModel[] GetMeasurements(TestClients.MeasurementsService.MeasurementQueryModel query);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetMeasurements", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetMeasurementsResponse")]
        System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementModel[]> GetMeasurementsAsync(TestClients.MeasurementsService.MeasurementQueryModel query);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetSensors", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetSensorsResponse")]
        TestClients.MeasurementsService.SensorModel[] GetSensors(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetSensors", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetSensorsResponse")]
        System.Threading.Tasks.Task<TestClients.MeasurementsService.SensorModel[]> GetSensorsAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementsTemplate", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementsTemplateRes" +
            "ponse")]
        TestClients.MeasurementsService.MeasurementModel[] GetSaveMeasurementsTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementsTemplate", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementsTemplateRes" +
            "ponse")]
        System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementModel[]> GetSaveMeasurementsTemplateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementPackageTempl" +
            "ate", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementPackageTempl" +
            "ateResponse")]
        TestClients.MeasurementsService.MeasurementPackage GetSaveMeasurementPackageTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementPackageTempl" +
            "ate", ReplyAction="Savonia.MeasurementService.V3/IMeasurementsService/GetSaveMeasurementPackageTempl" +
            "ateResponse")]
        System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementPackage> GetSaveMeasurementPackageTemplateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMeasurementsServiceChannel : TestClients.MeasurementsService.IMeasurementsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MeasurementsServiceClient : System.ServiceModel.ClientBase<TestClients.MeasurementsService.IMeasurementsService>, TestClients.MeasurementsService.IMeasurementsService {
        
        public MeasurementsServiceClient() {
        }
        
        public MeasurementsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MeasurementsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeasurementsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MeasurementsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestClients.MeasurementsService.SaveResult SaveMeasurements(string key, TestClients.MeasurementsService.MeasurementModel[] measurements) {
            return base.Channel.SaveMeasurements(key, measurements);
        }
        
        public System.Threading.Tasks.Task<TestClients.MeasurementsService.SaveResult> SaveMeasurementsAsync(string key, TestClients.MeasurementsService.MeasurementModel[] measurements) {
            return base.Channel.SaveMeasurementsAsync(key, measurements);
        }
        
        public TestClients.MeasurementsService.SaveResult SaveMeasurementPackage(TestClients.MeasurementsService.MeasurementPackage measurementPackage) {
            return base.Channel.SaveMeasurementPackage(measurementPackage);
        }
        
        public System.Threading.Tasks.Task<TestClients.MeasurementsService.SaveResult> SaveMeasurementPackageAsync(TestClients.MeasurementsService.MeasurementPackage measurementPackage) {
            return base.Channel.SaveMeasurementPackageAsync(measurementPackage);
        }
        
        public TestClients.MeasurementsService.MeasurementModel[] RestGetMeasurements(string key, string sensors, string obj, string tag, string take, string from, string to, string inclusiveFrom, string inclusiveTo) {
            return base.Channel.RestGetMeasurements(key, sensors, obj, tag, take, from, to, inclusiveFrom, inclusiveTo);
        }
        
        public System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementModel[]> RestGetMeasurementsAsync(string key, string sensors, string obj, string tag, string take, string from, string to, string inclusiveFrom, string inclusiveTo) {
            return base.Channel.RestGetMeasurementsAsync(key, sensors, obj, tag, take, from, to, inclusiveFrom, inclusiveTo);
        }
        
        public TestClients.MeasurementsService.MeasurementModel[] GetMeasurements(TestClients.MeasurementsService.MeasurementQueryModel query) {
            return base.Channel.GetMeasurements(query);
        }
        
        public System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementModel[]> GetMeasurementsAsync(TestClients.MeasurementsService.MeasurementQueryModel query) {
            return base.Channel.GetMeasurementsAsync(query);
        }
        
        public TestClients.MeasurementsService.SensorModel[] GetSensors(string key) {
            return base.Channel.GetSensors(key);
        }
        
        public System.Threading.Tasks.Task<TestClients.MeasurementsService.SensorModel[]> GetSensorsAsync(string key) {
            return base.Channel.GetSensorsAsync(key);
        }
        
        public TestClients.MeasurementsService.MeasurementModel[] GetSaveMeasurementsTemplate() {
            return base.Channel.GetSaveMeasurementsTemplate();
        }
        
        public System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementModel[]> GetSaveMeasurementsTemplateAsync() {
            return base.Channel.GetSaveMeasurementsTemplateAsync();
        }
        
        public TestClients.MeasurementsService.MeasurementPackage GetSaveMeasurementPackageTemplate() {
            return base.Channel.GetSaveMeasurementPackageTemplate();
        }
        
        public System.Threading.Tasks.Task<TestClients.MeasurementsService.MeasurementPackage> GetSaveMeasurementPackageTemplateAsync() {
            return base.Channel.GetSaveMeasurementPackageTemplateAsync();
        }
    }
}
